name: Hello World

#on:
#  schedule:
#    #- cron:  '0 */12 * * *'
#    - cron:  '* * * * *'

on: [push]

jobs:
  one:
    name: Hello
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      #- uses: actions/docker/cli@master
      - name: Hello
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a "/tmp/ssh_agent.sock" > /dev/null
          eval $(ssh-agent)
          ssh-add - <<< "${{ secrets.GITHUB_KEY }}"
          git config user.name "T-vK"
          git config user.email "t-vk@users.noreply.github.com"
          git remote set-url origin "git@github.com:${GITHUB_REPOSITORY}.git"
          export LATEST_PACKAGE_VERSION=$(docker run alpine:latest sh -c "apk update -q && apk info tor --description | grep 'tor-' | cut -d ' ' -f1 | cut -d '-' -f2-")
          export CURRENT_TAG=$(git tag --points-at ${GITHUB_SHA})
          git tag -d "1.0"
          git tag -d "$CURRENT_TAG"
          if [ "$LATEST_PACKAGE_VERSION" != "$CURRENT_TAG" ] ; then
              docker build . -t "dockerup2date/tor:${LATEST_PACKAGE_VERSION}"
              if [ "$CURRENT_TAG" == "" ] ; then
                  git tag "$LATEST_PACKAGE_VERSION"
              else
                  git tag "$LATEST_PACKAGE_VERSION" "$CURRENT_TAG" && git tag -d "$CURRENT_TAG"
              fi
              git tag --list
              git push --tags
              # docker login ...
              # docker push "dockerup2date/tor:${LATEST_PACKAGE_VERSION}"
          fi
